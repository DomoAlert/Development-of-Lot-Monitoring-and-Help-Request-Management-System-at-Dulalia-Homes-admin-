import React from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { ThemeProvider } from './context/ThemeContext';
import { UserProvider } from './context/UserContext';
import { PageTitleProvider } from './context/PageTitleContext';
import Login from './pages/Login';
import Dashboard from './pages/Admin/Dashboard';
import Inventory from './pages/Admin/Inventory';
import Staff from './pages/Admin/Staff';
import UserAccounts from './pages/Admin/UserAccounts';
import FacilityRequests from './pages/Admin/FacilityRequests';
import ServiceRequests from './pages/Admin/ServiceRequests';
import Announcements from './pages/Admin/Announcements';
import Feedback from './pages/Admin/Feedback';
import GuardAccounts from './pages/Admin/GuardAccounts';
import VisitorLogs from './pages/Admin/VisitorLogs';
import LotStatus from './pages/Admin/LotStatus';

// Protected Route component
const ProtectedRoute = ({ children }) => {
  const adminToken = localStorage.getItem('adminToken');
  
  if (!adminToken) {
    return <Navigate to="/" replace />;
  }

  return children;
};

function App() {
  return (
    <ThemeProvider>
      <UserProvider>
        <Router>
          <PageTitleProvider>
            <Routes>
          <Route path="/" element={<Login />} />
          
          {/* Protected Admin Routes */}
          <Route 
            path="/admin" 
            element={
              <ProtectedRoute>
                <Dashboard />
              </ProtectedRoute>
            } 
          />
          <Route 
            path="/admin/user-accounts" 
            element={
              <ProtectedRoute>
                <UserAccounts />
              </ProtectedRoute>
            } 
          />
          <Route 
            path="/admin/staff" 
            element={
              <ProtectedRoute>
                <Staff />
              </ProtectedRoute>
            } 
          />
          <Route 
            path="/admin/facility-requests" 
            element={
              <ProtectedRoute>
                <FacilityRequests />
              </ProtectedRoute>
            } 
          />
          <Route 
            path="/admin/service-requests" 
            element={
              <ProtectedRoute>
                <ServiceRequests />
              </ProtectedRoute>
            } 
          />
          <Route 
            path="/admin/announcements" 
            element={
              <ProtectedRoute>
                <Announcements />
              </ProtectedRoute>
            } 
          />
          <Route 
            path="/admin/feedback" 
            element={
              <ProtectedRoute>
                <Feedback />
              </ProtectedRoute>
            }
          />
          <Route 
            path="/admin/inventory" 
            element={
              <ProtectedRoute>
                <Inventory />
              </ProtectedRoute>
            } 
          />
          <Route 
            path="/admin/guard-accounts" 
            element={
              <ProtectedRoute>
                <GuardAccounts />
              </ProtectedRoute>
            } 
          />
          <Route 
            path="/admin/visitor-logs" 
            element={
              <ProtectedRoute>
                <VisitorLogs />
              </ProtectedRoute>
            } 
          />
          <Route 
            path="/admin/lot-status" 
            element={
              <ProtectedRoute>
                <LotStatus />
              </ProtectedRoute>
            } 
          />
        </Routes>
        <ToastContainer 
          position="top-right"
          autoClose={3000}
          hideProgressBar={false}
          newestOnTop
          closeOnClick
          rtl={false}
          pauseOnFocusLoss
          draggable
          pauseOnHover
          theme="colored"
        />
            </Routes>
            <ToastContainer 
              position="top-right"
              autoClose={3000}
              hideProgressBar={false}
              newestOnTop
              closeOnClick
              rtl={false}
              pauseOnFocusLoss
              draggable
              pauseOnHover
              theme="colored"
            />
          </PageTitleProvider>
        </Router>
      </UserProvider>
    </ThemeProvider>
  );
}

export default App;